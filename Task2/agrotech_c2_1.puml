@startuml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml

Person(operator, "Оператор", "Мониторинг алертов и уведомлений")

System_Boundary(edge-agent, "Edge-Агент") {
    Container(agro_mvp, "АгроТех MVP", "Java", "Новая система мониторинга, управление системами кормления")
    ContainerDb(cache, "Data Cache", "", "Кэш данных на случай отключения связи")

    Container(food_mnt, "Мониторинг кормов", "Python", "Отслеживание запасов")
    Container(water_mnt, "Мониторинг воды", "Python", "Мониторинг систем фильтрации")
}

System_Boundary(current_system, "Цифровая платформа АгроПром X") {
    Container(iot_gw, "IoT шлюз", "Node-RED", "Сбор данных с полей и ферм")
    Container(ai_cluster, "AI-кластер", "", "Анализ видео данных: пересчет животных, контроль состояния, контроль задавливания")
    Container(kafka, "Брокер сообщений", "Apache Kafka", "Шина данных")
}

System_Ext(cam_vendor, "Камеры видеонаблюдения")
System_Ext(sms_gateway, "SMS-шлюз", "Уведомления при отсутствии интернета")
System_Ext(feeding_system, "Система кормления", "Общий API для разных производителей", "Modbus/OPC-UA")

Rel(sms_gateway, operator, "SMS-оповещения")

Rel(food_mnt, agro_mvp, "Передает данные")
Rel(water_mnt, agro_mvp, "Передает данные")
Rel(agro_mvp, feeding_system, "Передает команды")

Rel(cam_vendor, agro_mvp, "Видео-данные", "RTSP")
Rel(agro_mvp, cache, "Использует при ошибках запросов к платформе")
Rel(agro_mvp, sms_gateway, "SMS-оповещения")
Rel(agro_mvp, iot_gw, "Отправка метрик", "HTTP")
Rel(agro_mvp, ai_cluster, "gRPC стрим / WebRTC", "RTSP over TCP")
Rel(iot_gw, kafka, "Публикует данные", "Kafka Protocol")
Rel(ai_cluster, kafka, "Публикует данные", "Kafka Protocol")

@enduml