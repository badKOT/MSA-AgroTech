@startuml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml

' AI-generated, потому что сам бы я до такого не додумался

Person(operator, "Оператор фермы", "Веб-интерфейс на месте")

System_Boundary(edge_farm, "Edge-система фермы (Raspberry Pi 4 8 ГБ + Coral USB TPU)") {
    Container(web, "Веб-UI", "React (serve через Nginx)", "Локальный дашборд")
    Container(api, "Edge API", "Python FastAPI", "REST + WebSocket для UI")
    Container(ai, "AI-инференс", "Python + TensorFlow Lite + libedgetpu", "Обнаружение/трекинг свиней, классификация поведения")
    Container(db, "Локальное хранилище", "SQLite + TimescaleDB", "Видеофрагменты, метрики, события")
    Container(sync, "Синхронизатор", "Python (RClone + Git)", "Отправка логов в MinIO/S3, pull-обновлений моделей")
    Container(mqtt, "MQTT-брокер", "Mosquitto", "Обмен между микросервисами, в т.ч. с контроллером кормления")
}

System_Ext(cameras, "IP-камеры", "RTSP")
System_Ext(feeding, "Контроллер кормления", "Modbus-TCP")
System_Ext(sms_modem, "USB GSM-модем", "AT-команды")
System_Ext(cloud, "Центральный сервер", "MinIO, Git, Kafka Connect")

Rel(operator, web, "", "Wi-Fi/LAN")
Rel(web, api, "REST/WebSocket")
Rel(api, ai, "gRPC вызовы инференса")
Rel(api, db, "Чтение/запись событий")
Rel(ai, db, "Сохраняет фрагменты и метрики")
Rel(cameras, ai, "RTSP-потоки")
Rel(api, mqtt, "Публикация команд")
Rel(mqtt, feeding, "Modbus-шлюз")
Rel(sync, db, "Экспорт логов")
Rel(sync, cloud, "HTTPS (если связь есть)", "rclone sync")
Rel(api, sms_modem, "AT-команды", "USB-serial")
@enduml